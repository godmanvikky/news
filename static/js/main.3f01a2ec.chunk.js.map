{"version":3,"sources":["reducers/newsReducer.js","reducers/index.js","components/NewsCard.js","components/ListOfNews.js","actions/fetchNews.js","components/App.js","index.js"],"names":["newsReducer","state","action","type","payload","combineReducers","news","NewsCard","props","this","articles","innerText","console","log","filteredArticle","filter","title","toLowerCase","includes","map","name","key","Component","ListOfNews","InputStore","event","setState","target","value","fetchNews","className","onChange","React","connect","dispatch","a","url","fetch","response","json","r","App","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"8MAQeA,EARE,WAAoB,IAAnBC,EAAkB,uDAAZ,GAAGC,EAAS,uCAChC,OAAOA,EAAOC,MACV,IAAK,aACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICFJI,cAAgB,CAC3BC,KAAKN,I,6DCmBMO,E,YApBX,WAAYC,GAAO,qEACTA,I,sEAGD,IAAD,EACsBC,KAAKD,MAA1BE,EADD,EACCA,SAASC,EADV,EACUA,UACdC,QAAQC,IAAIF,GACZ,IAAIG,EAAiBH,EAAYD,EAASK,QAAO,SAAAL,GAAQ,OAAIA,EAASM,MAAMC,cAAcC,SAASP,EAAUM,kBAAkBP,EAC/H,OAAGI,EACY,6BAEHA,EAAgBK,KAAI,SAACC,EAAKC,GAAN,OAAY,2BAAID,EAAKJ,WAK1C,0C,GAjBIM,aCEjBC,E,YACF,WAAYf,GAAO,IAAD,8BACd,4CAAMA,KAQVgB,WAAY,SAACC,GACT,EAAKC,SAAS,CACVf,UAAUc,EAAME,OAAOC,SAT3B,EAAK3B,MAAM,CACPU,UAAU,IAHA,E,iFAOdF,KAAKD,MAAMqB,c,+BAON,IACAnB,EAAWD,KAAKD,MAAMF,KAAtBI,SACCC,EAAYF,KAAKR,MAAjBU,UACN,OACI,yBAAKmB,UAAU,WACX,2BAAO3B,KAAK,OAAO2B,UAAU,SAASC,SAAUtB,KAAKe,aACrD,kBAAC,EAAD,CAAUd,SAAUA,EACjBC,UAAWA,S,GAtBLqB,IAAMV,WAgChBW,eALQ,SAAChC,GACpB,MAAO,CACHK,KAAKL,EAAMK,QAGoB,CAACuB,UCpCf,WACrB,8CAAO,WAAOK,GAAP,mBAAAC,EAAA,+FAECC,EAFD,8GAGmBC,MAAMD,GAHzB,cAGGE,EAHH,gBAISA,EAASC,OAJlB,OAICC,EAJD,OAKHN,EAAS,CACL/B,KAAK,aACLC,QAAQoC,IAPT,2CAAP,mDAAM,KDmCKP,CAAqCV,GE/BrCkB,EAHH,WACX,OAAO,4BAAI,kBAAC,EAAD,QCINC,EAAOC,YAAYC,EAASC,YAAgBC,MAElDC,IAASC,OACT,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OACQO,SAASC,cAAc,Y","file":"static/js/main.3f01a2ec.chunk.js","sourcesContent":["let newsReducer =(state=[],action)=>{\r\n    switch(action.type){\r\n        case \"FETCH_NEWS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default newsReducer;","\r\nimport {combineReducers} from 'redux';\r\nimport newsReducer from './newsReducer'\r\nexport default combineReducers({\r\n    news:newsReducer\r\n})","import React,{ Component } from 'react';\r\n\r\nclass NewsCard extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    \r\n    render(){\r\n        let {articles,innerText} =this.props\r\n        console.log(innerText)\r\n        let filteredArticle= innerText ? articles.filter(articles => articles.title.toLowerCase().includes(innerText.toLowerCase())) : articles;\r\n        if(filteredArticle){\r\n                return(<div>\r\n                {\r\n                    filteredArticle.map((name,key)=><p>{name.title}</p>)\r\n               }\r\n            </div>)\r\n        }\r\n        else{\r\n            return <p>Loading</p>\r\n        }\r\n    }\r\n}\r\nexport default NewsCard;","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchNews} from '../actions/fetchNews'\r\nimport NewsCard from './NewsCard'\r\nclass ListOfNews extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            innerText:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchNews()\r\n    }\r\n    InputStore =(event) =>{\r\n        this.setState({\r\n            innerText:event.target.value\r\n        })\r\n    }\r\n    render(){\r\n        let {articles} =this.props.news\r\n        let { innerText }=this.state\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <input type=\"text\" className=\"search\" onChange={this.InputStore}/>\r\n                <NewsCard articles={articles}\r\n                   innerText={innerText} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps =(state)=>{\r\n    return {\r\n        news:state.news\r\n    }\r\n}\r\nexport default connect(mapStatetoProps,{fetchNews})(ListOfNews);","export const fetchNews = () =>{\r\n    return async (dispatch) =>{\r\n        let apiKey = `212b3ff89c2f46dba79a92bd866e1658`;\r\n        let url = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${apiKey}`;\r\n        const response =await fetch(url)\r\n        let r=await response.json()\r\n        dispatch({\r\n            type:\"FETCH_NEWS\",\r\n            payload:r\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport ListOfNews from './ListOfNews'\r\nconst App = () =>{\r\n return <h1><ListOfNews/></h1>\r\n}\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk';\r\nimport {createStore ,applyMiddleware} from 'redux';\r\nimport reducers from './reducers/index'\r\nimport App from './components/App'\r\nconst store= createStore(reducers,applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App></App>\r\n</Provider>,document.querySelector('#root'))\r\n"],"sourceRoot":""}